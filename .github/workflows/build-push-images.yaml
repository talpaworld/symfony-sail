name: Build and push images

on:
  pull_request:
    paths:
      - 'docker/**'
  push:
    paths:
      - 'docker/**'
  workflow_dispatch:

jobs:
    caddy:
        runs-on: ubuntu-latest
        name: "${{ matrix.target }}:${{ matrix.version }}"
        env:
          image: gremo/symfony-sail-${{ matrix.target }}
        strategy:
          fail-fast: false
          matrix:
            version: ['2.6', '2', 'latest']
            target: ['caddy-base']
        steps:
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2

          - name: Login to Docker Hub
            uses: docker/login-action@v2
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

          - name: Build and push
            uses: docker/build-push-action@v4
            env:
              tag: "${{ env.image }}:${{ matrix.version }}"
              cache: "${{ matrix.target }}:${{ matrix.version }}"
            with:
              context: "{{defaultContext}}:docker/caddy"
              target: ${{ matrix.target }}
              push: ${{ github.event_name != 'pull_request' }}
              tags: ${{ env.tag }}
              build-args: |
                BASE_BUILDER_IMAGE=${{ matrix.version == 'latest' && 'builder' || format('{0}-builder', matrix.version) }}-alpine
                BASE_IMAGE=${{ matrix.version == 'latest' && 'alpine' || format('{0}-alpine', matrix.version) }}
              cache-from: type=gha,scope=${{ env.cache }}
              cache-to: type=gha,mode=max,scope=${{ env.cache }}

    php:
      runs-on: ubuntu-latest
      name: "${{ matrix.target }}:${{ matrix.version }}"
      env:
        image: gremo/symfony-sail-${{ matrix.target }}
      strategy:
        fail-fast: false
        matrix:
          version: ['8.2', '8', 'latest', '8.1', '7.4', '7']
          target: ['php-dev', 'php-prod']
      steps:
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v4
          env:
            tag: "${{ env.image }}:${{ matrix.version }}"
            cache: "${{ matrix.target }}:${{ matrix.version }}"
          with:
            context: "{{defaultContext}}:docker/php"
            target: ${{ matrix.target }}
            push: ${{ github.event_name != 'pull_request' }}
            tags: ${{ env.tag }}
            build-args: |
              BASE_IMAGE=${{ matrix.version == 'latest' && 'fpm' || format('{0}-fpm', matrix.version) }}-bullseye
            cache-from: type=gha,scope=${{ env.cache }}
            cache-to: type=gha,mode=max,scope=${{ env.cache }}

    mariadb:
      runs-on: ubuntu-latest
      name: "${{ matrix.target }}:${{ matrix.version }}"
      env:
        image: gremo/symfony-sail-${{ matrix.target }}
      strategy:
        fail-fast: false
        matrix:
          version: ['10.9', 'latest', '10.8', '10.7', '10.6']
          target: ['mariadb-base']
      steps:
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v4
          env:
            tag: "${{ env.image }}:${{ matrix.version }}"
            cache: "${{ matrix.target }}:${{ matrix.version }}"
          with:
            context: "{{defaultContext}}:docker/mariadb"
            target: ${{ matrix.target }}
            push: ${{ github.event_name != 'pull_request' }}
            tags: ${{env.tag }}
            build-args: |
              BASE_IMAGE=${{ matrix.version }}
            cache-from: type=gha,scope=${{ env.cache }}
            cache-to: type=gha,mode=max,scope=${{ env.cache }}
